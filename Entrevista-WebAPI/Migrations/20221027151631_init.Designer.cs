// <auto-generated />
using Entrevista_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entrevista_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221027151631_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("Entrevista_WebAPI.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Cargos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartamentoId = 1,
                            Nome = "Matemática"
                        },
                        new
                        {
                            Id = 2,
                            DepartamentoId = 2,
                            Nome = "Física"
                        },
                        new
                        {
                            Id = 3,
                            DepartamentoId = 3,
                            Nome = "Português"
                        },
                        new
                        {
                            Id = 4,
                            DepartamentoId = 4,
                            Nome = "Inglês"
                        },
                        new
                        {
                            Id = 5,
                            DepartamentoId = 5,
                            Nome = "Programação"
                        });
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.Departamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Lauro"
                        },
                        new
                        {
                            id = 2,
                            nome = "Roberto"
                        },
                        new
                        {
                            id = 3,
                            nome = "Ronaldo"
                        },
                        new
                        {
                            id = 4,
                            nome = "Rodrigo"
                        },
                        new
                        {
                            id = 5,
                            nome = "Alexandre"
                        });
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.Funcionario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Marta",
                            sobrenome = "Kent",
                            telefone = "33225555"
                        },
                        new
                        {
                            id = 2,
                            nome = "Paula",
                            sobrenome = "Isabela",
                            telefone = "3354288"
                        },
                        new
                        {
                            id = 3,
                            nome = "Laura",
                            sobrenome = "Antonia",
                            telefone = "55668899"
                        },
                        new
                        {
                            id = 4,
                            nome = "Luiza",
                            sobrenome = "Maria",
                            telefone = "6565659"
                        },
                        new
                        {
                            id = 5,
                            nome = "Lucas",
                            sobrenome = "Machado",
                            telefone = "565685415"
                        },
                        new
                        {
                            id = 6,
                            nome = "Pedro",
                            sobrenome = "Alvares",
                            telefone = "456454545"
                        },
                        new
                        {
                            id = 7,
                            nome = "Paulo",
                            sobrenome = "José",
                            telefone = "9874512"
                        });
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.FuncionarioCargo", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FuncionarioId", "CargoId");

                    b.HasIndex("CargoId");

                    b.ToTable("FuncionarioCargos");

                    b.HasData(
                        new
                        {
                            FuncionarioId = 1,
                            CargoId = 2
                        },
                        new
                        {
                            FuncionarioId = 1,
                            CargoId = 4
                        },
                        new
                        {
                            FuncionarioId = 1,
                            CargoId = 5
                        },
                        new
                        {
                            FuncionarioId = 2,
                            CargoId = 1
                        },
                        new
                        {
                            FuncionarioId = 2,
                            CargoId = 2
                        },
                        new
                        {
                            FuncionarioId = 2,
                            CargoId = 5
                        },
                        new
                        {
                            FuncionarioId = 3,
                            CargoId = 1
                        },
                        new
                        {
                            FuncionarioId = 3,
                            CargoId = 2
                        },
                        new
                        {
                            FuncionarioId = 3,
                            CargoId = 3
                        },
                        new
                        {
                            FuncionarioId = 4,
                            CargoId = 1
                        },
                        new
                        {
                            FuncionarioId = 4,
                            CargoId = 4
                        },
                        new
                        {
                            FuncionarioId = 4,
                            CargoId = 5
                        },
                        new
                        {
                            FuncionarioId = 5,
                            CargoId = 4
                        },
                        new
                        {
                            FuncionarioId = 5,
                            CargoId = 5
                        },
                        new
                        {
                            FuncionarioId = 6,
                            CargoId = 1
                        },
                        new
                        {
                            FuncionarioId = 6,
                            CargoId = 2
                        },
                        new
                        {
                            FuncionarioId = 6,
                            CargoId = 3
                        },
                        new
                        {
                            FuncionarioId = 6,
                            CargoId = 4
                        },
                        new
                        {
                            FuncionarioId = 7,
                            CargoId = 1
                        },
                        new
                        {
                            FuncionarioId = 7,
                            CargoId = 2
                        },
                        new
                        {
                            FuncionarioId = 7,
                            CargoId = 3
                        },
                        new
                        {
                            FuncionarioId = 7,
                            CargoId = 4
                        },
                        new
                        {
                            FuncionarioId = 7,
                            CargoId = 5
                        });
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.Cargo", b =>
                {
                    b.HasOne("Entrevista_WebAPI.Models.Departamento", "Departamento")
                        .WithMany("Cargos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.FuncionarioCargo", b =>
                {
                    b.HasOne("Entrevista_WebAPI.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entrevista_WebAPI.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Entrevista_WebAPI.Models.Departamento", b =>
                {
                    b.Navigation("Cargos");
                });
#pragma warning restore 612, 618
        }
    }
}
